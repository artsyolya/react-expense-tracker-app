{"ast":null,"code":"var _jsxFileName = \"/Users/Olya/Documents/Development & Design/Projects/Development Practice/React js Projects/expense-tracker/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  // setting up State hook to store and update form inputs\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  /* Alternate way to use useState() here:\r\n  const [userInput, setUserInput] = useState({\r\n  \tenteredTitle: '',\r\n  \tenteredAmount: '',\r\n  \tenteredDate: '',\r\n  });\r\n  */\n  // trigger functions to store form fields' entered values\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    /* Alternate way to use useState() here:\r\n    setUserInput({\r\n    \t...userInput,\r\n    \tenteredTitle: event.target.value,\r\n    });\r\n    */\n\n    /* Updating state that depends on the previous state:\r\n    setUserInput((prevState) => {\r\n    \t...prevState,\r\n    \tenteredTitle: event.target.value,\r\n    });\r\n    */\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const submitHandler = () => {\n    const expenseDate = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseDate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: titleChangeHandler,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: amountChangeHandler,\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: dateChangeHandler,\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__submit\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","expenseDate","title","amount","date","Date","console","log"],"sources":["/Users/Olya/Documents/Development & Design/Projects/Development Practice/React js Projects/expense-tracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nfunction ExpenseForm() {\r\n\t// setting up State hook to store and update form inputs\r\n\tconst [enteredTitle, setEnteredTitle] = useState('');\r\n\tconst [enteredAmount, setEnteredAmount] = useState('');\r\n\tconst [enteredDate, setEnteredDate] = useState('');\r\n\t\r\n\t\r\n\t/* Alternate way to use useState() here:\r\n\tconst [userInput, setUserInput] = useState({\r\n\t\tenteredTitle: '',\r\n\t\tenteredAmount: '',\r\n\t\tenteredDate: '',\r\n\t});\r\n\t*/\r\n\t\r\n\t// trigger functions to store form fields' entered values\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t\t/* Alternate way to use useState() here:\r\n\t\tsetUserInput({\r\n\t\t\t...userInput,\r\n\t\t\tenteredTitle: event.target.value,\r\n\t\t});\r\n\t\t*/\r\n\t\t\r\n\t\t/* Updating state that depends on the previous state:\r\n\t\tsetUserInput((prevState) => {\r\n\t\t\t...prevState,\r\n\t\t\tenteredTitle: event.target.value,\r\n\t\t});\r\n\t\t*/\r\n\t};\r\n\t\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t};\r\n\t\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t};\r\n\r\n\tconst submitHandler = () => {\r\n\t\tconst expenseDate = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: enteredAmount,\r\n\t\t\tdate: new Date(enteredDate),\r\n\t\t};\r\n\t\tconsole.log(expenseDate)\r\n\t};\r\n\t\r\n\treturn(\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className=\"new-expense__controls\">\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input onChange={titleChangeHandler} type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input onChange={amountChangeHandler} type=\"number\" min=\"0.01\" step=\"0.01\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__control\">\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input onChange={dateChangeHandler} type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"new-expense__submit\">\r\n\t\t\t\t\t<button type=\"submit\">Add New Expense</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACtB;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;EAGA;AACD;AACA;AACA;AACA;AACA;AACA;EAEC;;EACA,MAAMQ,kBAAkB,GAAIC,KAAD,IAAW;IACrCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;IACA;AACF;AACA;AACA;AACA;AACA;;IAEE;AACF;AACA;AACA;AACA;AACA;EACE,CAfD;;EAiBA,MAAMC,mBAAmB,GAAIH,KAAD,IAAW;IACtCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACA,CAFD;;EAIA,MAAME,iBAAiB,GAAIJ,KAAD,IAAW;IACpCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACA,CAFD;;EAIA,MAAMG,aAAa,GAAG,MAAM;IAC3B,MAAMC,WAAW,GAAG;MACnBC,KAAK,EAAEd,YADY;MAEnBe,MAAM,EAAEb,aAFW;MAGnBc,IAAI,EAAE,IAAIC,IAAJ,CAASb,WAAT;IAHa,CAApB;IAKAc,OAAO,CAACC,GAAR,CAAYN,WAAZ;EACA,CAPD;;EASA,oBACC;IAAM,QAAQ,EAAED,aAAhB;IAAA,uBACC;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACC;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAEC;UAAO,QAAQ,EAAEN,kBAAjB;UAAqC,IAAI,EAAC;QAA1C;UAAA;UAAA;UAAA;QAAA,QAFD;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAKC;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAEC;UAAO,QAAQ,EAAEI,mBAAjB;UAAsC,IAAI,EAAC,QAA3C;UAAoD,GAAG,EAAC,MAAxD;UAA+D,IAAI,EAAC;QAApE;UAAA;UAAA;UAAA;QAAA,QAFD;MAAA;QAAA;QAAA;QAAA;MAAA,QALD,eASC;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADD,eAEC;UAAO,QAAQ,EAAEC,iBAAjB;UAAoC,IAAI,EAAC,MAAzC;UAAgD,GAAG,EAAC,YAApD;UAAiE,GAAG,EAAC;QAArE;UAAA;UAAA;UAAA;QAAA,QAFD;MAAA;QAAA;QAAA;QAAA;MAAA,QATD,eAaC;QAAK,SAAS,EAAC,qBAAf;QAAA,uBACC;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QAbD;IAAA;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAqBA;;GAvEQZ,W;;KAAAA,W;AAyET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}