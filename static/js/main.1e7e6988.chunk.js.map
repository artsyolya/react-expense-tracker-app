{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","id","Math","random","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onStopEditing","NewExpense","isEditing","setIsEditing","enteredExpenseData","toString","onAddExpense","Card","classes","children","ChartBar","barFillHeight","maxValue","console","log","style","height","label","Chart","dataValues","dataPoints","map","dataPoint","maxDataPoint","ExpensesChart","chartDataPoints","expenses","expense","getMonth","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","Number","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1e7e6988.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nfunction ExpenseForm(props) {\r\n  // setting up State hook to store and update form inputs\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  /* Alternate way to use useState() here:\r\n\tconst [userInput, setUserInput] = useState({\r\n\t\tenteredTitle: '',\r\n\t\tenteredAmount: '',\r\n\t\tenteredDate: '',\r\n\t});\r\n\t*/\r\n\r\n  // trigger functions to store form fields' entered values\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    /* Alternate way to use useState() here:\r\n\t\tsetUserInput({\r\n\t\t\t...userInput,\r\n\t\t\tenteredTitle: event.target.value,\r\n\t\t});\r\n\t\t*/\r\n\r\n    /* Updating state that depends on the previous state:\r\n\t\tsetUserInput((prevState) => {\r\n\t\t\t...prevState,\r\n\t\t\tenteredTitle: event.target.value,\r\n\t\t});\r\n\t\t*/\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Save form inputs\r\n    const expenseData = {\r\n      id: Math.random(),\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    //console.log(expenseData);\r\n\r\n    // pass the expense data up to NewExpense component\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    // clear form input fields\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__btns\">\r\n          <button type=\"button\" onClick={props.onStopEditing}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nfunction NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // receive and save new expense data from ExpenseForm component\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    //console.log(expenseData);\r\n\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const clickHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button type=\"submit\" className=\"show-form-btn\" onClick={clickHandler}>\r\n          Add New Expense\r\n        </button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onStopEditing={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nfunction ChartBar(props) {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = (props.value / props.maxValue) * 100 + \"%\";\n  }\n  console.log(\"ChartBar: \", props.value, props.maxValue);\n\n  return (\n    <div className=\"bar-chart\">\n      <div className=\"bar-chart__inner\">\n        <div\n          className=\"bar-chart__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <p className=\"bar-chart__label\">{props.label}</p>\n    </div>\n  );\n}\n\nexport default ChartBar;\n","import React from \"react\";\nimport Card from \"../UI/Card\";\n\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nfunction Chart(props) {\n  const dataValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const maxDataPoint = Math.max(...dataValues);\n\n  return (\n    <Card className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          label={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={maxDataPoint}\n        ></ChartBar>\n      ))}\n    </Card>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart(props) {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // 0 = Jan, 1 = Feb, etc.\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints}></Chart>;\n}\n\nexport default ExpensesChart;\n","import React from \"react\";\n\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <div className=\"expenses-filter__select\">\n          <select value={props.selected} onChange={dropdownChangeHandler}>\n            <option value=\"2022\">2022</option>\n            <option value=\"2021\">2021</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\n\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"default\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"default\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <p className=\"expense-date__month\">{month}</p>\n      <p className=\"expense-date__year\">{year}</p>\n      <p className=\"expense-date__day\">{day}</p>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-description\">\n          <h2>{props.title}</h2>\n          <p className=\"expense-description__amount\">${props.amount}</p>\n        </div>\n      </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nfunction ExpensesList(props) {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          date={expense.date}\n          title={expense.title}\n          amount={expense.amount}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ExpensesList;\n","import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(\n    (expense) => expense.date.getFullYear() === Number(filteredYear)\n  );\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  { id: \"el1\", date: new Date(2022, 1, 23), title: \"New Desk\", amount: 250 },\n  {\n    id: \"el2\",\n    date: new Date(2022, 2, 2),\n    title: \"Car Insurance\",\n    amount: 130.59,\n  },\n  {\n    id: \"el3\",\n    date: new Date(2022, 2, 13),\n    title: \"Cell Phone\",\n    amount: 56.65,\n  },\n  { id: \"el4\", date: new Date(2021, 11, 6), title: \"Internet\", amount: 70 },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    //console.log(\"In App.js\");\n    //console.log(expense);\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}